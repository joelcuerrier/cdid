res <- data.frame(
cdid2step_mean = colMeans(simgmm[1:simi,]),   # GMM means
cdidIdentity_mean = colMeans(simgmm2[1:simi,]),   # GMM means
did_mean = colMeans(simdid[1:simi,]),   # DID means
cdid2step_sd = apply(simgmm[1:simi,], 2, sd), # GMM standard deviations
cdidIdentity_sd = apply(simgmm2[1:simi,], 2, sd), # GMM standard deviations
did_sd = apply(simdid[1:simi,], 2, sd) # DID standard deviations
)
# Print the results as a table
rownames(res) <- paste0("ATT(",did.results$group,",",did.results$t,")")
#print(res)
}
#ATT dynamic
agg.es.id$att.egt
simcdid2step_dyn[simi,] <- agg.es.gmm$att.egt
simcdidIdentity_dyn[simi,] <- agg.es.id$att.egt
simdid_dyn[simi,] <- agg.es.did$att.egt
if (simi > 2) {
# Compute column means and standard deviations
res_dyn <- data.frame(
cdid2step_mean = colMeans(simcdid2step_dyn[1:simi,]),   # GMM means
cdidIdentity_mean = colMeans(simcdidIdentity_dyn[1:simi,]),   # GMM means
did_mean = colMeans(simdid_dyn[1:simi,]),   # DID means
cdid2step_sd = apply(simcdid2step_dyn[1:simi,], 2, sd), # GMM standard deviations
cdidIdentity_sd = apply(simcdidIdentity_dyn[1:simi,], 2, sd), # GMM standard deviations
did_sd = apply(simdid_dyn[1:simi,], 2, sd) # DID standard deviations
)
# Print the results as a table
rownames(res_dyn) <- agg.es.did$egt
#
}
#Overall ATT
agg.es.id$overall.att
simcdid2step_overall[simi,] <- agg.es.gmm$overall.att
simcdidIdentity_overall[simi,] <- agg.es.id$overall.att
simdid_overall[simi,] <- agg.es.did$overall.att
if (simi > 2) {
# Compute column means and standard deviations
res_overall <- data.frame(
cdid2step_mean = mean(simcdid2step_overall[1:simi, ]),   # GMM means
cdidIdentity_mean = mean(simcdidIdentity_overall[1:simi, ]),   # GMM means
did_mean = mean(simdid_overall[1:simi, ]),   # DID means
cdid2step_sd = sd(simcdid2step_overall[1:simi, ]), # GMM standard deviations
cdidIdentity_sd = sd(simcdidIdentity_overall[1:simi, ]), # GMM standard deviations
did_sd = sd(simdid_overall[1:simi, ]) # DID standard deviations
)
# Print the results as a table
rownames(res_overall) <- paste0("ATT")
#print(res_overall)
}
}
#Compare results
# First three columns are averages across simulations
# Last three columns are standard deviations across simulations
print(round(res,3))
print(round(res_dyn,3))
print(round(res_overall,3))
#Load the relevant packages
library(did) #Callaway and Sant'Anna (2021)
library(cdid) #Bellego, Benatia, and Dortet-Bernadet (2024)
set.seed(123)
#Generate a dataset: 500 units, 8 time periods, with unit fixed-effects.
# The parameter sigma_alpha controls the unit-specific time-persistent unobserved
# heterogeneity.
data0=fonction_simu_attrition(N = 500,T = 8,theta2_alpha_Gg = 0.5,
lambda1_alpha_St = 0, sigma_alpha = 2,
sigma_epsilon = 0.1, tprob = 0.5)
# The true values of the coefficients are based on time-to-treatment. The treatment
# effect is zero before the treatment, 1.75 one period after, 1.5 two period after,
# 1.25 three period after, 1 four period after, 0.75 five period after, 0.5 six
# period after, etc.
#We keep all observations, so we have a balanced dataset
data0$S <- 1
#Look at the data
head(data0,20)
#run did library on balanced panel
did.results = att_gt(
yname="Y",
tname="date",
idname = "id",
gname = "date_G",
xformla = ~X,
data = data0,
weightsname = NULL,
allow_unbalanced_panel = FALSE,
panel = TRUE,
control_group = "notyettreated",
alp = 0.05,
bstrap = TRUE,
cband = TRUE,
biters = 1000,
clustervars = NULL,
est_method = "ipw",
base_period = "varying",
print_details = FALSE,
pl = FALSE,
cores = 1
)
#run cdid with 2step weighting matrix
result_2step = att_gt_cdid(yname="Y", tname="date",
idname="id",
gname="date_G",
xformla=~X,
data=data0,
control_group="notyettreated",
alp=0.05,
bstrap=TRUE,
biters=1000,
clustervars=NULL,
cband=TRUE,
est_method="2-step",
base_period="varying",
print_details=FALSE,
pl=FALSE,
cores=1)
#run cdid with identity weighting matrix
result_id = att_gt_cdid(yname="Y", tname="date",
idname="id",
gname="date_G",
xformla=~X,
data=data0,
control_group="notyettreated",
alp=0.05,
bstrap=TRUE,
biters=1000,
clustervars=NULL,
cband=TRUE,
est_method="Identity",
base_period="varying",
print_details=FALSE,
pl=FALSE,
cores=1)
print(did.results)
# Remark that standard errors are smaller for most ATT(g,t) when using cdid
print(result_2step)
print(result_id)
# Aggregation
agg.es.did <- aggte(MP = did.results, type = 'dynamic')
agg.es.2step <- aggte(MP = result_2step, type = 'dynamic')
agg.es.id <- aggte(MP = result_id, type = 'dynamic')
# Print results
agg.es.did
#Remark that standard errors are smaller, notably so for the 2step estimator
agg.es.2step
agg.es.id
#Generate a dataset: 500 units, 8 time periods, with unit fixed-effects (alpha)
set.seed(123)
data0=fonction_simu_attrition(N = 500,T = 8,theta2_alpha_Gg = 0.5,
lambda1_alpha_St = 0, sigma_alpha = 2,
sigma_epsilon = 0.1, tprob = 0.5)
#We discard observations based on sampling indicator S
data0 <- data0[data0$S==1,]
#run did
did.results =  att_gt(
yname="Y",
tname="date",
idname = "id",
gname = "date_G",
xformla = ~X,
data = data0,
weightsname = NULL,
allow_unbalanced_panel = FALSE,
panel = FALSE,
control_group = "notyettreated",
alp = 0.05,
bstrap = TRUE,
cband = TRUE,
biters = 1000,
clustervars = NULL,
est_method = "ipw",
base_period = "varying",
print_details = FALSE,
pl = FALSE,
cores = 1
)
#run cdid with 2step weighting matrix
result_2step = att_gt_cdid(yname="Y", tname="date",
idname="id",
gname="date_G",
xformla=~X,
data=data0,
control_group="notyettreated",
alp=0.05,
bstrap=TRUE,
biters=1000,
clustervars=NULL,
cband=TRUE,
est_method="2-step",
base_period="varying",
print_details=FALSE,
pl=FALSE,
cores=1)
#run cdid with identity weighting matrix
result_id = att_gt_cdid(yname="Y", tname="date",
idname="id",
gname="date_G",
xformla=~X,
data=data0,
control_group="notyettreated",
alp=0.05,
bstrap=TRUE,
biters=1000,
clustervars=NULL,
cband=TRUE,
est_method="Identity",
base_period="varying",
print_details=FALSE,
pl=FALSE,
cores=1)
#remotes::install_github("joelcuerrier/cdid", ref = "main", build_vignettes = TRUE, force = TRUE)
#Load the relevant packages
library(did) #Callaway and Sant'Anna (2021)
#library(cdid) #Bellego, Benatia, and Dortet-Bernadet (2024)
# #to test functions before
devtools::load_all(".")
#
# #update docs
library(roxygen2)
roxygen2::roxygenise()
#
# #verify
devtools::document()
devtools::build_vignettes()
#remotes::install_github("joelcuerrier/cdid", ref = "main", build_vignettes = TRUE, force = TRUE)
#Load the relevant packages
library(did) #Callaway and Sant'Anna (2021)
#library(cdid) #Bellego, Benatia, and Dortet-Bernadet (2024)
# #to test functions before
devtools::load_all(".")
#
# #update docs
library(roxygen2)
roxygen2::roxygenise()
#
# #verify
devtools::document()
devtools::build_vignettes()
#devtools::build()
devtools::check()
devtools::check_win_devel()
# Set the working directory to the project root
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
#Load the relevant packages
library(did) #Callaway and Sant'Anna (2021)
library(cdid) #Bellego, Benatia, and Dortet-Bernadet (2024)
set.seed(123)
#Generate a dataset: 500 units, 8 time periods, with unit fixed-effects.
# The parameter sigma_alpha controls the unit-specific time-persistent unobserved
# heterogeneity.
data0=fonction_simu_attrition(N = 500,T = 8,theta2_alpha_Gg = 0.5,
lambda1_alpha_St = 0, sigma_alpha = 2,
sigma_epsilon = 0.1, tprob = 0.5)
# The true values of the coefficients are based on time-to-treatment. The treatment
# effect is zero before the treatment, 1.75 one period after, 1.5 two period after,
# 1.25 three period after, 1 four period after, 0.75 five period after, 0.5 six
# period after, etc.
#We keep all observations, so we have a balanced dataset
data0$S <- 1
#Look at the data
head(data0,20)
#run did library on balanced panel
did.results = att_gt(
yname="Y",
tname="date",
idname = "id",
gname = "date_G",
xformla = ~X,
data = data0,
weightsname = NULL,
allow_unbalanced_panel = FALSE,
panel = TRUE,
control_group = "notyettreated",
alp = 0.05,
bstrap = TRUE,
cband = TRUE,
biters = 1000,
clustervars = NULL,
est_method = "ipw",
base_period = "varying",
print_details = FALSE,
pl = FALSE,
cores = 1
)
#run cdid with 2step weighting matrix
result_2step = att_gt_cdid(yname="Y", tname="date",
idname="id",
gname="date_G",
xformla=~X,
data=data0,
control_group="notyettreated",
alp=0.05,
bstrap=TRUE,
biters=1000,
clustervars=NULL,
cband=TRUE,
est_method="2-step",
base_period="varying",
print_details=FALSE,
pl=FALSE,
cores=1)
#run cdid with identity weighting matrix
result_id = att_gt_cdid(yname="Y", tname="date",
idname="id",
gname="date_G",
xformla=~X,
data=data0,
control_group="notyettreated",
alp=0.05,
bstrap=TRUE,
biters=1000,
clustervars=NULL,
cband=TRUE,
est_method="Identity",
base_period="varying",
print_details=FALSE,
pl=FALSE,
cores=1)
print(did.results)
# Remark that standard errors are smaller for most ATT(g,t) when using cdid
print(result_2step)
print(result_id)
# Aggregation
agg.es.did <- aggte(MP = did.results, type = 'dynamic')
agg.es.2step <- aggte(MP = result_2step, type = 'dynamic')
agg.es.id <- aggte(MP = result_id, type = 'dynamic')
# Print results
agg.es.did
#Remark that standard errors are smaller, notably so for the 2step estimator
agg.es.2step
agg.es.id
#Generate a dataset: 500 units, 8 time periods, with unit fixed-effects (alpha)
set.seed(123)
data0=fonction_simu_attrition(N = 500,T = 8,theta2_alpha_Gg = 0.5,
lambda1_alpha_St = 0, sigma_alpha = 2,
sigma_epsilon = 0.1, tprob = 0.5)
#We discard observations based on sampling indicator S
data0 <- data0[data0$S==1,]
#run did
did.results =  att_gt(
yname="Y",
tname="date",
idname = "id",
gname = "date_G",
xformla = ~X,
data = data0,
weightsname = NULL,
allow_unbalanced_panel = FALSE,
panel = FALSE,
control_group = "notyettreated",
alp = 0.05,
bstrap = TRUE,
cband = TRUE,
biters = 1000,
clustervars = NULL,
est_method = "ipw",
base_period = "varying",
print_details = FALSE,
pl = FALSE,
cores = 1
)
#run cdid with 2step weighting matrix
result_2step = att_gt_cdid(yname="Y", tname="date",
idname="id",
gname="date_G",
xformla=~X,
data=data0,
control_group="notyettreated",
alp=0.05,
bstrap=TRUE,
biters=1000,
clustervars=NULL,
cband=TRUE,
est_method="2-step",
base_period="varying",
print_details=FALSE,
pl=FALSE,
cores=1)
#run cdid with identity weighting matrix
result_id = att_gt_cdid(yname="Y", tname="date",
idname="id",
gname="date_G",
xformla=~X,
data=data0,
control_group="notyettreated",
alp=0.05,
bstrap=TRUE,
biters=1000,
clustervars=NULL,
cband=TRUE,
est_method="Identity",
base_period="varying",
print_details=FALSE,
pl=FALSE,
cores=1)
#Note the precision gains
print(did.results)
print(result_2step)
print(result_id)
# Aggregation
# There are other ways to aggregate, see the did library
agg.es.did <- aggte(MP = did.results, type = 'dynamic')
agg.es.2step <- aggte(MP = result_2step, type = 'dynamic')
agg.es.id <- aggte(MP = result_id, type = 'dynamic')
#Note the precision gains
agg.es.did
agg.es.2step
agg.es.id
devtools::check_win_devel()
#remotes::install_github("joelcuerrier/cdid", ref = "main", build_vignettes = TRUE, force = TRUE)
#Load the relevant packages
library(did) #Callaway and Sant'Anna (2021)
#library(cdid) #Bellego, Benatia, and Dortet-Bernadet (2024)
# #to test functions before
devtools::load_all(".")
#
# #update docs
library(roxygen2)
roxygen2::roxygenise()
#
# #verify
devtools::document()
devtools::build_vignettes()
#devtools::build()
devtools::check()
install.packages(rprojroot)
install.packages("rprojroot")
install.packages("rprojroot")
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
#remotes::install_github("joelcuerrier/cdid", ref = "main", build_vignettes = TRUE, force = TRUE)
#Load the relevant packages
library(did) #Callaway and Sant'Anna (2021)
#library(cdid) #Bellego, Benatia, and Dortet-Bernadet (2024)
# #to test functions before
devtools::load_all(".")
#
# #update docs
library(roxygen2)
roxygen2::roxygenise()
#
# #verify
devtools::document()
devtools::build_vignettes()
devtools::build()
devtools::check()
#remotes::install_github("joelcuerrier/cdid", ref = "main", build_vignettes = TRUE, force = TRUE)
#Load the relevant packages
library(did) #Callaway and Sant'Anna (2021)
#library(cdid) #Bellego, Benatia, and Dortet-Bernadet (2024)
# #to test functions before
devtools::load_all(".")
#
# #update docs
library(roxygen2)
roxygen2::roxygenise()
#
# #verify
devtools::document()
#devtools::build_vignettes()
#devtools::build()
devtools::check()
devtools::check_win_devel()
# #update docs
library(roxygen2)
roxygen2::roxygenise()
#
# #verify
devtools::document()
#devtools::build_vignettes()
#devtools::build()
devtools::check()
devtools::check_win_devel()
devtools::build_vignettes()
devtools::build()
devtools::check()
#devtools::install()
devtools::check_win_devel()
library(did)
?att_gt
?conditional_did_pretest
devtools::document()
devtools::check()
devtools::build()
devtools::check_win_devel()
#remotes::install_github("joelcuerrier/cdid", ref = "main", build_vignettes = TRUE, force = TRUE)
#Load the relevant packages
library(did) #Callaway and Sant'Anna (2021)
#library(cdid) #Bellego, Benatia, and Dortet-Bernadet (2024)
# #to test functions before
devtools::load_all(".")
#
# #update docs
library(roxygen2)
roxygen2::roxygenise()
devtools::document()
#remotes::install_github("joelcuerrier/cdid", ref = "main", build_vignettes = TRUE, force = TRUE)
#Load the relevant packages
library(did) #Callaway and Sant'Anna (2021)
#library(cdid) #Bellego, Benatia, and Dortet-Bernadet (2024)
# #to test functions before
devtools::load_all(".")
#
# #update docs
library(roxygen2)
roxygen2::roxygenise()
#
# #verify
devtools::document()
#devtools::build_vignettes()
devtools::build()
devtools::check()
#devtools::install()
devtools::check_win_devel()
